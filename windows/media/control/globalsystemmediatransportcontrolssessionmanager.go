// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package control

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
)

const SignatureGlobalSystemMediaTransportControlsSessionManager string = "rc(Windows.Media.Control.GlobalSystemMediaTransportControlsSessionManager;{cace8eac-e86e-504a-ab31-5ff8ff1bce49})"

type GlobalSystemMediaTransportControlsSessionManager struct {
	ole.IUnknown
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) GetCurrentSession() (*GlobalSystemMediaTransportControlsSession, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.GetCurrentSession()
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) GetSessions() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.GetSessions()
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) AddCurrentSessionChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.AddCurrentSessionChanged(handler)
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) RemoveCurrentSessionChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.RemoveCurrentSessionChanged(token)
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) AddSessionsChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.AddSessionsChanged(handler)
}

func (impl *GlobalSystemMediaTransportControlsSessionManager) RemoveSessionsChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManager))
	defer itf.Release()
	v := (*iGlobalSystemMediaTransportControlsSessionManager)(unsafe.Pointer(itf))
	return v.RemoveSessionsChanged(token)
}

const GUIDiGlobalSystemMediaTransportControlsSessionManager string = "cace8eac-e86e-504a-ab31-5ff8ff1bce49"
const SignatureiGlobalSystemMediaTransportControlsSessionManager string = "{cace8eac-e86e-504a-ab31-5ff8ff1bce49}"

type iGlobalSystemMediaTransportControlsSessionManager struct {
	ole.IInspectable
}

type iGlobalSystemMediaTransportControlsSessionManagerVtbl struct {
	ole.IInspectableVtbl

	GetCurrentSession           uintptr
	GetSessions                 uintptr
	AddCurrentSessionChanged    uintptr
	RemoveCurrentSessionChanged uintptr
	AddSessionsChanged          uintptr
	RemoveSessionsChanged       uintptr
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) VTable() *iGlobalSystemMediaTransportControlsSessionManagerVtbl {
	return (*iGlobalSystemMediaTransportControlsSessionManagerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) GetCurrentSession() (*GlobalSystemMediaTransportControlsSession, error) {
	var out *GlobalSystemMediaTransportControlsSession
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCurrentSession,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out GlobalSystemMediaTransportControlsSession
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) GetSessions() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSessions,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) AddCurrentSessionChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddCurrentSessionChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) RemoveCurrentSessionChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveCurrentSessionChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) AddSessionsChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSessionsChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iGlobalSystemMediaTransportControlsSessionManager) RemoveSessionsChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSessionsChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiGlobalSystemMediaTransportControlsSessionManagerStatics string = "2050c4ee-11a0-57de-aed7-c97c70338245"
const SignatureiGlobalSystemMediaTransportControlsSessionManagerStatics string = "{2050c4ee-11a0-57de-aed7-c97c70338245}"

type iGlobalSystemMediaTransportControlsSessionManagerStatics struct {
	ole.IInspectable
}

type iGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl struct {
	ole.IInspectableVtbl

	GlobalSystemMediaTransportControlsSessionManagerRequestAsync uintptr
}

func (v *iGlobalSystemMediaTransportControlsSessionManagerStatics) VTable() *iGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl {
	return (*iGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func GlobalSystemMediaTransportControlsSessionManagerRequestAsync() (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Control.GlobalSystemMediaTransportControlsSessionManager", ole.NewGUID(GUIDiGlobalSystemMediaTransportControlsSessionManagerStatics))
	if err != nil {
		return nil, err
	}
	v := (*iGlobalSystemMediaTransportControlsSessionManagerStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().GlobalSystemMediaTransportControlsSessionManagerRequestAsync,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
